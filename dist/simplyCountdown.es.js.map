{"version":3,"file":"simplyCountdown.es.js","sources":["../src/core/simplyCountdown.js"],"sourcesContent":["/* global Symbol */\n\n/*!\n* Project : simply-countdown\n* Date : 06/12/2024\n* License : MIT\n* Version : 2.0.1\n* Author : Vincent Loy <vincent.loy1@gmail.com>\n* Contributors :\n*  - Justin Beasley <JustinB@harvest.org>\n*  - Nathan Smith <NathanS@harvest.org>\n*/\n\n/**\n * Function that merge user parameters with defaults one.\n * @param output\n * @returns {*|{}}\n */\n\nlet extend = function (output) {\n    let obj;\n    let out = output || {};\n\n    for (let i = 1; i < arguments.length; i += 1) {\n        obj = arguments[i];\n        const keys = Object.keys(obj);\n\n        if (keys.length) {\n            for (let i2 = 0; i2 < keys.length; i2 += 1) {\n                let key = keys[i2];\n\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    if (typeof obj[key] === 'object') {\n                        extend(out[key], obj[key]);\n                    } else {\n                        out[key] = obj[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return out;\n};\n\nlet isIterableElement = (val) => {\n    return val !== null && Symbol.iterator in Object(val);\n};\n\n/**\n * Function that create a countdown section\n * @param countdown\n * @param parameters\n * @param typeClass\n * @returns {{full: (*|Element), amount: (*|Element), word: (*|Element)}}\n */\nlet createCountdownElt = (countdown, parameters, typeClass) => {\n    let sectionTag = document.createElement('div');\n    let amountTag = document.createElement('span');\n    let wordTag = document.createElement('span');\n    let innerSectionTag = document.createElement('div');\n\n    innerSectionTag.appendChild(amountTag);\n    innerSectionTag.appendChild(wordTag);\n    sectionTag.appendChild(innerSectionTag);\n\n    sectionTag.classList.add(parameters.sectionClass);\n    sectionTag.classList.add(typeClass);\n    amountTag.classList.add(parameters.amountClass);\n    wordTag.classList.add(parameters.wordClass);\n\n    countdown.appendChild(sectionTag);\n\n    return {\n        full: sectionTag,\n        amount: amountTag,\n        word: wordTag\n    };\n};\n\n/**\n * Function that create full countdown DOM elements calling createCountdownElt\n * @param parameters\n * @param countdown\n * @returns {{days:(*|Element), hours:(*|Element), minutes:(*|Element), seconds:(*|Element)}}\n */\nlet createElements = (parameters, countdown) => {\n    let spanTag;\n\n    if (!parameters.inline) {\n        return {\n            days: createCountdownElt(countdown, parameters, 'simply-days-section'),\n            hours: createCountdownElt(countdown, parameters, 'simply-hours-section'),\n            minutes: createCountdownElt(countdown, parameters, 'simply-minutes-section'),\n            seconds: createCountdownElt(countdown, parameters, 'simply-seconds-section')\n        };\n    }\n\n    spanTag = document.createElement('span');\n    spanTag.classList.add(parameters.inlineClass);\n    countdown.appendChild(spanTag);\n\n    return {\n        days: spanTag,\n        hours: spanTag,\n        minutes: spanTag,\n        seconds: spanTag\n    };\n};\n\n/**\n * simplyCountdown, create and display the countdown.\n * @param elt\n * @param args (parameters)\n */\nexport const simplyCountdown = function (elt, args) {\n    const eltProto = Object.getPrototypeOf(elt);\n    let parameters = extend({\n        year: 2015,\n        month: 6,\n        day: 28,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        words: {\n            days: {lambda: (root, n) => {return n > 1 ? root + \"s\" : root }, root: 'day'},\n            hours: {lambda: (root, n) => {return n > 1 ? root + \"s\" : root }, root: 'hour'},\n            minutes: {lambda: (root, n) => {return n > 1 ? root + \"s\" : root }, root: 'minute'},\n            seconds: {lambda: (root, n) => {return n > 1 ? root + \"s\" : root }, root: 'second'}\n        },\n        plural: true,\n        inline: false,\n        inlineSeparator: ', ',\n        enableUtc: false,\n        onEnd: () => {\n        },\n        refresh: 1000,\n        inlineClass: 'simply-countdown-inline',\n        sectionClass: 'simply-section',\n        amountClass: 'simply-amount',\n        wordClass: 'simply-word',\n        zeroPad: false,\n        removeZeroUnits: false,\n        countUp: false\n    }, args);\n    let interval;\n    let targetDate;\n    let now;\n    let secondsLeft;\n    let days;\n    let hours;\n    let minutes;\n    let seconds;\n    let cd;\n\n    // console.log(typeof elt);\n    //\n    if (eltProto === String.prototype) {\n        cd = document.querySelectorAll(elt);\n    } else {\n        cd = elt;\n    }\n\n    if (parameters.enableUtc) {\n        // Use UTC for target date\n        targetDate = new Date(Date.UTC(\n            parameters.year,\n            parameters.month - 1,\n            parameters.day,\n            parameters.hours,\n            parameters.minutes,\n            parameters.seconds\n        ));\n    } else {\n        // Use local time for target date\n        targetDate = new Date(\n            parameters.year,\n            parameters.month - 1,\n            parameters.day,\n            parameters.hours,\n            parameters.minutes,\n            parameters.seconds\n        );\n    }\n\n    let runCountdown = (theCountdown) => {\n        let countdown = theCountdown;\n        let fullCountDown = createElements(parameters, countdown);\n        let refresh;\n\n        refresh = function () {\n            let dayWord;\n            let hourWord;\n            let minuteWord;\n            let secondWord;\n\n            let updateDisplayDate = () => {\n                days = parseInt(secondsLeft / 86400, 10);\n                secondsLeft %= 86400;\n\n                hours = parseInt(secondsLeft / 3600, 10);\n                secondsLeft %= 3600;\n\n                minutes = parseInt(secondsLeft / 60, 10);\n                seconds = parseInt(secondsLeft % 60, 10);\n            };\n\n            if (parameters.enableUtc) {\n                // Calculate \"now\" in UTC\n                now = new Date();\n                now = new Date(Date.UTC(\n                    now.getUTCFullYear(),\n                    now.getUTCMonth(),\n                    now.getUTCDate(),\n                    now.getUTCHours(),\n                    now.getUTCMinutes(),\n                    now.getUTCSeconds()\n                ));\n            } else {\n                // Calculate \"now\" in local time\n                now = new Date();\n            }\n\n            secondsLeft = Math.floor((targetDate - now.getTime()) / 1000);\n\n            if (secondsLeft > 0) {\n                updateDisplayDate();\n            } else if (parameters.countUp) {\n                secondsLeft = (now.getTime() - targetDate) / 1000;\n                updateDisplayDate();\n            } else {\n                days = 0;\n                hours = 0;\n                minutes = 0;\n                seconds = 0;\n                window.clearInterval(interval);\n                parameters.onEnd();\n            }\n\n            let getWord = (obj, n) => {\n                return obj.hasOwnProperty('lambda')\n                    ? obj.lambda(obj.root, n)\n                    : obj.root\n            };\n            let words = parameters.words;\n            dayWord = getWord(words.days, days);\n            hourWord = getWord(words.hours, hours);\n            minuteWord = getWord(words.minutes, minutes);\n            secondWord = getWord(words.seconds, seconds);\n\n            /* display an inline countdown into a span tag */\n            if (parameters.inline) {\n                let displayStr = '';\n\n                if (!(parameters.removeZeroUnits && days === 0)) {\n                    displayStr += `${days} ${dayWord}${parameters.inlineSeparator}`;\n                }\n\n                if (!(parameters.removeZeroUnits && days === 0 && hours === 0)) {\n                    displayStr += `${hours} ${hourWord}${parameters.inlineSeparator}`;\n                }\n\n                if (!(parameters.removeZeroUnits && days === 0 && hours === 0 && minutes === 0)) {\n                    displayStr += `${minutes} ${minuteWord}${parameters.inlineSeparator}`;\n                }\n\n                // Seconds should always be displayed\n                displayStr += `${seconds} ${secondWord}`;\n\n                countdown.innerHTML = displayStr.replace(/, $/, ''); // Remove trailing comma if any\n            } else {\n                if (!(parameters.removeZeroUnits && days === 0)) {\n                    fullCountDown.days.amount.textContent = (parameters.zeroPad && days.toString().length < 2 ? '0' : '') + days;\n                    fullCountDown.days.word.textContent = dayWord;\n                    fullCountDown.days.full.style.display = '';\n                } else {\n                    fullCountDown.days.full.style.display = 'none';\n                }\n\n                if (!(parameters.removeZeroUnits && days === 0 && hours === 0)) {\n                    fullCountDown.hours.amount.textContent = (parameters.zeroPad && hours.toString().length < 2 ? '0' : '') + hours;\n                    fullCountDown.hours.word.textContent = hourWord;\n                    fullCountDown.hours.full.style.display = '';\n                } else {\n                    fullCountDown.hours.full.style.display = 'none';\n                }\n\n                if (!(parameters.removeZeroUnits && days === 0 && hours === 0 && minutes === 0)) {\n                    fullCountDown.minutes.amount.textContent = (parameters.zeroPad && minutes.toString().length < 2 ? '0' : '') + minutes;\n                    fullCountDown.minutes.word.textContent = minuteWord;\n                    fullCountDown.minutes.full.style.display = '';\n                } else {\n                    fullCountDown.minutes.full.style.display = 'none';\n                }\n\n                // Seconds should always be displayed\n                fullCountDown.seconds.amount.textContent = (parameters.zeroPad && seconds.toString().length < 2 ? '0' : '') + seconds;\n                fullCountDown.seconds.word.textContent = secondWord;\n                fullCountDown.seconds.full.style.display = '';\n            }\n        };\n\n        // Refresh immediately to prevent a Flash of Unstyled Content\n        refresh();\n        interval = window.setInterval(refresh, parameters.refresh);\n    };\n\n    if (!isIterableElement(cd)) {\n        runCountdown(cd);\n    } else {\n        Array.prototype.forEach.call(cd, (cdElt) => {\n            runCountdown(cdElt);\n        });\n    }\n};\n\n// Export for CommonJS and AMD\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = { simplyCountdown };\n} else if (typeof define === 'function' && define.amd) {\n    define([], function() {\n        return { simplyCountdown };\n    });\n}\n"],"names":["extend","output","obj","out","i","keys","i2","key","isIterableElement","val","createCountdownElt","countdown","parameters","typeClass","sectionTag","amountTag","wordTag","innerSectionTag","createElements","spanTag","simplyCountdown","elt","args","eltProto","root","n","interval","targetDate","now","secondsLeft","days","hours","minutes","seconds","cd","runCountdown","theCountdown","fullCountDown","refresh","dayWord","hourWord","minuteWord","secondWord","updateDisplayDate","getWord","words","displayStr","cdElt"],"mappings":"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"}